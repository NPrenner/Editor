/*
* generated by Xtext
*/
package org.xtext.example.mydsl.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class MyDslGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class DomainmodelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Domainmodel");
		private final Assignment cElementAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cElementAlternatives_0 = (Alternatives)cElementAssignment.eContents().get(0);
		private final RuleCall cElementInterviewParserRuleCall_0_0 = (RuleCall)cElementAlternatives_0.eContents().get(0);
		private final RuleCall cElementTypeDefinitionParserRuleCall_0_1 = (RuleCall)cElementAlternatives_0.eContents().get(1);
		
		//Domainmodel:
		//	element+=(Interview | TypeDefinition)?;
		public ParserRule getRule() { return rule; }

		//element+=(Interview | TypeDefinition)?
		public Assignment getElementAssignment() { return cElementAssignment; }

		//Interview | TypeDefinition
		public Alternatives getElementAlternatives_0() { return cElementAlternatives_0; }

		//Interview
		public RuleCall getElementInterviewParserRuleCall_0_0() { return cElementInterviewParserRuleCall_0_0; }

		//TypeDefinition
		public RuleCall getElementTypeDefinitionParserRuleCall_0_1() { return cElementTypeDefinitionParserRuleCall_0_1; }
	}

	public class TypeDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TypeDefinition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSystemtypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cChannelDefintionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cDatatypeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cRoletypeParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//TypeDefinition:
		//	Systemtype | ChannelDefintion | Datatype | Roletype;
		public ParserRule getRule() { return rule; }

		//Systemtype | ChannelDefintion | Datatype | Roletype
		public Alternatives getAlternatives() { return cAlternatives; }

		//Systemtype
		public RuleCall getSystemtypeParserRuleCall_0() { return cSystemtypeParserRuleCall_0; }

		//ChannelDefintion
		public RuleCall getChannelDefintionParserRuleCall_1() { return cChannelDefintionParserRuleCall_1; }

		//Datatype
		public RuleCall getDatatypeParserRuleCall_2() { return cDatatypeParserRuleCall_2; }

		//Roletype
		public RuleCall getRoletypeParserRuleCall_3() { return cRoletypeParserRuleCall_3; }
	}

	public class DatatypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Datatype");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPackageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPackageAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cPackageDataPackageKeyword_1_0 = (Keyword)cPackageAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cDatatypeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameIDTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Datatype:
		//	"package" package="DataPackage" ";" "Datatype" name=ID "{" "}";
		public ParserRule getRule() { return rule; }

		//"package" package="DataPackage" ";" "Datatype" name=ID "{" "}"
		public Group getGroup() { return cGroup; }

		//"package"
		public Keyword getPackageKeyword_0() { return cPackageKeyword_0; }

		//package="DataPackage"
		public Assignment getPackageAssignment_1() { return cPackageAssignment_1; }

		//"DataPackage"
		public Keyword getPackageDataPackageKeyword_1_0() { return cPackageDataPackageKeyword_1_0; }

		//";"
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }

		//"Datatype"
		public Keyword getDatatypeKeyword_3() { return cDatatypeKeyword_3; }

		//name=ID
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_4_0() { return cNameIDTerminalRuleCall_4_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class SystemtypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Systemtype");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPackageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPackageAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cPackageSystemPackageKeyword_1_0 = (Keyword)cPackageAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cSystemtypeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameIDTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cFunctionsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cFunctionsFunctionParserRuleCall_6_0 = (RuleCall)cFunctionsAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Systemtype:
		//	"package" package="SystemPackage" ";" "Systemtype" name=ID "{" functions+=Function* "}";
		public ParserRule getRule() { return rule; }

		//"package" package="SystemPackage" ";" "Systemtype" name=ID "{" functions+=Function* "}"
		public Group getGroup() { return cGroup; }

		//"package"
		public Keyword getPackageKeyword_0() { return cPackageKeyword_0; }

		//package="SystemPackage"
		public Assignment getPackageAssignment_1() { return cPackageAssignment_1; }

		//"SystemPackage"
		public Keyword getPackageSystemPackageKeyword_1_0() { return cPackageSystemPackageKeyword_1_0; }

		//";"
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }

		//"Systemtype"
		public Keyword getSystemtypeKeyword_3() { return cSystemtypeKeyword_3; }

		//name=ID
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_4_0() { return cNameIDTerminalRuleCall_4_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//functions+=Function*
		public Assignment getFunctionsAssignment_6() { return cFunctionsAssignment_6; }

		//Function
		public RuleCall getFunctionsFunctionParserRuleCall_6_0() { return cFunctionsFunctionParserRuleCall_6_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class ChannelDefintionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ChannelDefintion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPackageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPackageAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cPackageChannelPackageKeyword_1_0 = (Keyword)cPackageAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Alternatives cTypeAlternatives_3_0 = (Alternatives)cTypeAssignment_3.eContents().get(0);
		private final Keyword cTypeAsynchronousKeyword_3_0_0 = (Keyword)cTypeAlternatives_3_0.eContents().get(0);
		private final Keyword cTypeSynchronousKeyword_3_0_1 = (Keyword)cTypeAlternatives_3_0.eContents().get(1);
		private final Keyword cChannelKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNameIDTerminalRuleCall_5_0 = (RuleCall)cNameAssignment_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//ChannelDefintion:
		//	"package" package="ChannelPackage" ";" type=("asynchronous" | "synchronous")? "Channel" name=ID "{" "}";
		public ParserRule getRule() { return rule; }

		//"package" package="ChannelPackage" ";" type=("asynchronous" | "synchronous")? "Channel" name=ID "{" "}"
		public Group getGroup() { return cGroup; }

		//"package"
		public Keyword getPackageKeyword_0() { return cPackageKeyword_0; }

		//package="ChannelPackage"
		public Assignment getPackageAssignment_1() { return cPackageAssignment_1; }

		//"ChannelPackage"
		public Keyword getPackageChannelPackageKeyword_1_0() { return cPackageChannelPackageKeyword_1_0; }

		//";"
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }

		//type=("asynchronous" | "synchronous")?
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//"asynchronous" | "synchronous"
		public Alternatives getTypeAlternatives_3_0() { return cTypeAlternatives_3_0; }

		//"asynchronous"
		public Keyword getTypeAsynchronousKeyword_3_0_0() { return cTypeAsynchronousKeyword_3_0_0; }

		//"synchronous"
		public Keyword getTypeSynchronousKeyword_3_0_1() { return cTypeSynchronousKeyword_3_0_1; }

		//"Channel"
		public Keyword getChannelKeyword_4() { return cChannelKeyword_4; }

		//name=ID
		public Assignment getNameAssignment_5() { return cNameAssignment_5; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_5_0() { return cNameIDTerminalRuleCall_5_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class RoletypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Roletype");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPackageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPackageAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cPackageRolePackageKeyword_1_0 = (Keyword)cPackageAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cRoletypeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameIDTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cStateAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cStateStateParserRuleCall_6_0 = (RuleCall)cStateAssignment_6.eContents().get(0);
		private final Assignment cTasksAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cTasksTaskParserRuleCall_7_0 = (RuleCall)cTasksAssignment_7.eContents().get(0);
		private final Assignment cMessagesAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cMessagesMessageParserRuleCall_8_0 = (RuleCall)cMessagesAssignment_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Roletype:
		//	"package" package="RolePackage" ";" "Roletype" name=ID "{" state+=State* tasks+=Task* messages+=Message* "}";
		public ParserRule getRule() { return rule; }

		//"package" package="RolePackage" ";" "Roletype" name=ID "{" state+=State* tasks+=Task* messages+=Message* "}"
		public Group getGroup() { return cGroup; }

		//"package"
		public Keyword getPackageKeyword_0() { return cPackageKeyword_0; }

		//package="RolePackage"
		public Assignment getPackageAssignment_1() { return cPackageAssignment_1; }

		//"RolePackage"
		public Keyword getPackageRolePackageKeyword_1_0() { return cPackageRolePackageKeyword_1_0; }

		//";"
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }

		//"Roletype"
		public Keyword getRoletypeKeyword_3() { return cRoletypeKeyword_3; }

		//name=ID
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_4_0() { return cNameIDTerminalRuleCall_4_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//state+=State*
		public Assignment getStateAssignment_6() { return cStateAssignment_6; }

		//State
		public RuleCall getStateStateParserRuleCall_6_0() { return cStateStateParserRuleCall_6_0; }

		//tasks+=Task*
		public Assignment getTasksAssignment_7() { return cTasksAssignment_7; }

		//Task
		public RuleCall getTasksTaskParserRuleCall_7_0() { return cTasksTaskParserRuleCall_7_0; }

		//messages+=Message*
		public Assignment getMessagesAssignment_8() { return cMessagesAssignment_8; }

		//Message
		public RuleCall getMessagesMessageParserRuleCall_8_0() { return cMessagesMessageParserRuleCall_8_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}

	public class StateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "State");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStateKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//State:
		//	"state" name=ID ";";
		public ParserRule getRule() { return rule; }

		//"state" name=ID ";"
		public Group getGroup() { return cGroup; }

		//"state"
		public Keyword getStateKeyword_0() { return cStateKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//";"
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}

	public class TaskElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Task");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTaskKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cParameterAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final CrossReference cParameterParameterCrossReference_3_0_0 = (CrossReference)cParameterAssignment_3_0.eContents().get(0);
		private final RuleCall cParameterParameterIDTerminalRuleCall_3_0_0_1 = (RuleCall)cParameterParameterCrossReference_3_0_0.eContents().get(1);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cCommaKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cParameterAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final CrossReference cParameterParameterCrossReference_3_1_1_0 = (CrossReference)cParameterAssignment_3_1_1.eContents().get(0);
		private final RuleCall cParameterParameterIDTerminalRuleCall_3_1_1_0_1 = (RuleCall)cParameterParameterCrossReference_3_1_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Task:
		//	"task" name=ID "(" (parameter+=[Parameter] ("," parameter+=[Parameter])*)? ")" ";";
		public ParserRule getRule() { return rule; }

		//"task" name=ID "(" (parameter+=[Parameter] ("," parameter+=[Parameter])*)? ")" ";"
		public Group getGroup() { return cGroup; }

		//"task"
		public Keyword getTaskKeyword_0() { return cTaskKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//(parameter+=[Parameter] ("," parameter+=[Parameter])*)?
		public Group getGroup_3() { return cGroup_3; }

		//parameter+=[Parameter]
		public Assignment getParameterAssignment_3_0() { return cParameterAssignment_3_0; }

		//[Parameter]
		public CrossReference getParameterParameterCrossReference_3_0_0() { return cParameterParameterCrossReference_3_0_0; }

		//ID
		public RuleCall getParameterParameterIDTerminalRuleCall_3_0_0_1() { return cParameterParameterIDTerminalRuleCall_3_0_0_1; }

		//("," parameter+=[Parameter])*
		public Group getGroup_3_1() { return cGroup_3_1; }

		//","
		public Keyword getCommaKeyword_3_1_0() { return cCommaKeyword_3_1_0; }

		//parameter+=[Parameter]
		public Assignment getParameterAssignment_3_1_1() { return cParameterAssignment_3_1_1; }

		//[Parameter]
		public CrossReference getParameterParameterCrossReference_3_1_1_0() { return cParameterParameterCrossReference_3_1_1_0; }

		//ID
		public RuleCall getParameterParameterIDTerminalRuleCall_3_1_1_0_1() { return cParameterParameterIDTerminalRuleCall_3_1_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }

		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}

	public class MessageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Message");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMessageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cParameterAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final CrossReference cParameterParameterCrossReference_3_0_0 = (CrossReference)cParameterAssignment_3_0.eContents().get(0);
		private final RuleCall cParameterParameterIDTerminalRuleCall_3_0_0_1 = (RuleCall)cParameterParameterCrossReference_3_0_0.eContents().get(1);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cCommaKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cParameterAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final CrossReference cParameterParameterCrossReference_3_1_1_0 = (CrossReference)cParameterAssignment_3_1_1.eContents().get(0);
		private final RuleCall cParameterParameterIDTerminalRuleCall_3_1_1_0_1 = (RuleCall)cParameterParameterCrossReference_3_1_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Message:
		//	"message" name=ID "(" (parameter+=[Parameter] ("," parameter+=[Parameter])*)? ")" ";";
		public ParserRule getRule() { return rule; }

		//"message" name=ID "(" (parameter+=[Parameter] ("," parameter+=[Parameter])*)? ")" ";"
		public Group getGroup() { return cGroup; }

		//"message"
		public Keyword getMessageKeyword_0() { return cMessageKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//(parameter+=[Parameter] ("," parameter+=[Parameter])*)?
		public Group getGroup_3() { return cGroup_3; }

		//parameter+=[Parameter]
		public Assignment getParameterAssignment_3_0() { return cParameterAssignment_3_0; }

		//[Parameter]
		public CrossReference getParameterParameterCrossReference_3_0_0() { return cParameterParameterCrossReference_3_0_0; }

		//ID
		public RuleCall getParameterParameterIDTerminalRuleCall_3_0_0_1() { return cParameterParameterIDTerminalRuleCall_3_0_0_1; }

		//("," parameter+=[Parameter])*
		public Group getGroup_3_1() { return cGroup_3_1; }

		//","
		public Keyword getCommaKeyword_3_1_0() { return cCommaKeyword_3_1_0; }

		//parameter+=[Parameter]
		public Assignment getParameterAssignment_3_1_1() { return cParameterAssignment_3_1_1; }

		//[Parameter]
		public CrossReference getParameterParameterCrossReference_3_1_1_0() { return cParameterParameterCrossReference_3_1_1_0; }

		//ID
		public RuleCall getParameterParameterIDTerminalRuleCall_3_1_1_0_1() { return cParameterParameterIDTerminalRuleCall_3_1_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }

		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}

	public class FunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Function");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFunctionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cParameterAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final CrossReference cParameterParameterCrossReference_3_0_0 = (CrossReference)cParameterAssignment_3_0.eContents().get(0);
		private final RuleCall cParameterParameterIDTerminalRuleCall_3_0_0_1 = (RuleCall)cParameterParameterCrossReference_3_0_0.eContents().get(1);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cCommaKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cParameterAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final CrossReference cParameterParameterCrossReference_3_1_1_0 = (CrossReference)cParameterAssignment_3_1_1.eContents().get(0);
		private final RuleCall cParameterParameterIDTerminalRuleCall_3_1_1_0_1 = (RuleCall)cParameterParameterCrossReference_3_1_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Assignment cReturnValueAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final Keyword cReturnValueReturnsKeyword_5_0_0 = (Keyword)cReturnValueAssignment_5_0.eContents().get(0);
		private final Assignment cReturnArgumentAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cReturnArgumentTypeDefinitionCrossReference_5_1_0 = (CrossReference)cReturnArgumentAssignment_5_1.eContents().get(0);
		private final RuleCall cReturnArgumentTypeDefinitionIDTerminalRuleCall_5_1_0_1 = (RuleCall)cReturnArgumentTypeDefinitionCrossReference_5_1_0.eContents().get(1);
		private final Assignment cReturnBoolAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final Keyword cReturnBoolBooleanKeyword_5_2_0 = (Keyword)cReturnBoolAssignment_5_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Function:
		//	"function" name=ID "(" (parameter+=[Parameter] ("," parameter+=[Parameter])*)? ")" (returnValue?="returns"
		//	returnArgument=[TypeDefinition]? returnBool="boolean"?)? ";";
		public ParserRule getRule() { return rule; }

		//"function" name=ID "(" (parameter+=[Parameter] ("," parameter+=[Parameter])*)? ")" (returnValue?="returns"
		//returnArgument=[TypeDefinition]? returnBool="boolean"?)? ";"
		public Group getGroup() { return cGroup; }

		//"function"
		public Keyword getFunctionKeyword_0() { return cFunctionKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//(parameter+=[Parameter] ("," parameter+=[Parameter])*)?
		public Group getGroup_3() { return cGroup_3; }

		//parameter+=[Parameter]
		public Assignment getParameterAssignment_3_0() { return cParameterAssignment_3_0; }

		//[Parameter]
		public CrossReference getParameterParameterCrossReference_3_0_0() { return cParameterParameterCrossReference_3_0_0; }

		//ID
		public RuleCall getParameterParameterIDTerminalRuleCall_3_0_0_1() { return cParameterParameterIDTerminalRuleCall_3_0_0_1; }

		//("," parameter+=[Parameter])*
		public Group getGroup_3_1() { return cGroup_3_1; }

		//","
		public Keyword getCommaKeyword_3_1_0() { return cCommaKeyword_3_1_0; }

		//parameter+=[Parameter]
		public Assignment getParameterAssignment_3_1_1() { return cParameterAssignment_3_1_1; }

		//[Parameter]
		public CrossReference getParameterParameterCrossReference_3_1_1_0() { return cParameterParameterCrossReference_3_1_1_0; }

		//ID
		public RuleCall getParameterParameterIDTerminalRuleCall_3_1_1_0_1() { return cParameterParameterIDTerminalRuleCall_3_1_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }

		//(returnValue?="returns" returnArgument=[TypeDefinition]? returnBool="boolean"?)?
		public Group getGroup_5() { return cGroup_5; }

		//returnValue?="returns"
		public Assignment getReturnValueAssignment_5_0() { return cReturnValueAssignment_5_0; }

		//"returns"
		public Keyword getReturnValueReturnsKeyword_5_0_0() { return cReturnValueReturnsKeyword_5_0_0; }

		//returnArgument=[TypeDefinition]?
		public Assignment getReturnArgumentAssignment_5_1() { return cReturnArgumentAssignment_5_1; }

		//[TypeDefinition]
		public CrossReference getReturnArgumentTypeDefinitionCrossReference_5_1_0() { return cReturnArgumentTypeDefinitionCrossReference_5_1_0; }

		//ID
		public RuleCall getReturnArgumentTypeDefinitionIDTerminalRuleCall_5_1_0_1() { return cReturnArgumentTypeDefinitionIDTerminalRuleCall_5_1_0_1; }

		//returnBool="boolean"?
		public Assignment getReturnBoolAssignment_5_2() { return cReturnBoolAssignment_5_2; }

		//"boolean"
		public Keyword getReturnBoolBooleanKeyword_5_2_0() { return cReturnBoolBooleanKeyword_5_2_0; }

		//";"
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}

	public class InterviewElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Interview");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPackageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPackageAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cPackageInterviewPackageKeyword_1_0 = (Keyword)cPackageAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cInterviewKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameSTRINGTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cMainKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cMainPlayerAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cMainPlayerRoleParserRuleCall_7_0 = (RuleCall)cMainPlayerAssignment_7.eContents().get(0);
		private final Assignment cObjectsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cObjectsObjectParserRuleCall_8_0 = (RuleCall)cObjectsAssignment_8.eContents().get(0);
		private final Assignment cProcessAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cProcessBusinessProcessParserRuleCall_9_0 = (RuleCall)cProcessAssignment_9.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//Interview:
		//	"package" package="InterviewPackage" ";" "Interview" name=STRING "{" "main" mainPlayer=Role objects+=Object*
		//	process+=BusinessProcess* "}";
		public ParserRule getRule() { return rule; }

		//"package" package="InterviewPackage" ";" "Interview" name=STRING "{" "main" mainPlayer=Role objects+=Object*
		//process+=BusinessProcess* "}"
		public Group getGroup() { return cGroup; }

		//"package"
		public Keyword getPackageKeyword_0() { return cPackageKeyword_0; }

		//package="InterviewPackage"
		public Assignment getPackageAssignment_1() { return cPackageAssignment_1; }

		//"InterviewPackage"
		public Keyword getPackageInterviewPackageKeyword_1_0() { return cPackageInterviewPackageKeyword_1_0; }

		//";"
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }

		//"Interview"
		public Keyword getInterviewKeyword_3() { return cInterviewKeyword_3; }

		//name=STRING
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_4_0() { return cNameSTRINGTerminalRuleCall_4_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//"main"
		public Keyword getMainKeyword_6() { return cMainKeyword_6; }

		//mainPlayer=Role
		public Assignment getMainPlayerAssignment_7() { return cMainPlayerAssignment_7; }

		//Role
		public RuleCall getMainPlayerRoleParserRuleCall_7_0() { return cMainPlayerRoleParserRuleCall_7_0; }

		//objects+=Object*
		public Assignment getObjectsAssignment_8() { return cObjectsAssignment_8; }

		//Object
		public RuleCall getObjectsObjectParserRuleCall_8_0() { return cObjectsObjectParserRuleCall_8_0; }

		//process+=BusinessProcess*
		public Assignment getProcessAssignment_9() { return cProcessAssignment_9; }

		//BusinessProcess
		public RuleCall getProcessBusinessProcessParserRuleCall_9_0() { return cProcessBusinessProcessParserRuleCall_9_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}

	public class ObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Object");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDataParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRoleParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cSystemParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cBooleanParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//Object:
		//	Data | Role | System | Boolean;
		public ParserRule getRule() { return rule; }

		//Data | Role | System | Boolean
		public Alternatives getAlternatives() { return cAlternatives; }

		//Data
		public RuleCall getDataParserRuleCall_0() { return cDataParserRuleCall_0; }

		//Role
		public RuleCall getRoleParserRuleCall_1() { return cRoleParserRuleCall_1; }

		//System
		public RuleCall getSystemParserRuleCall_2() { return cSystemParserRuleCall_2; }

		//Boolean
		public RuleCall getBooleanParserRuleCall_3() { return cBooleanParserRuleCall_3; }
	}

	public class BooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Boolean");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBooleanKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cTypeTypeDefinitionCrossReference_1_0 = (CrossReference)cTypeAssignment_1.eContents().get(0);
		private final RuleCall cTypeTypeDefinitionIDTerminalRuleCall_1_0_1 = (RuleCall)cTypeTypeDefinitionCrossReference_1_0.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Boolean:
		//	"boolean" type=[TypeDefinition]? name=ID ";";
		public ParserRule getRule() { return rule; }

		//"boolean" type=[TypeDefinition]? name=ID ";"
		public Group getGroup() { return cGroup; }

		//"boolean"
		public Keyword getBooleanKeyword_0() { return cBooleanKeyword_0; }

		//type=[TypeDefinition]?
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }

		//[TypeDefinition]
		public CrossReference getTypeTypeDefinitionCrossReference_1_0() { return cTypeTypeDefinitionCrossReference_1_0; }

		//ID
		public RuleCall getTypeTypeDefinitionIDTerminalRuleCall_1_0_1() { return cTypeTypeDefinitionIDTerminalRuleCall_1_0_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//";"
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}

	public class SystemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "System");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSystemKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cTypeTypeDefinitionCrossReference_1_0 = (CrossReference)cTypeAssignment_1.eContents().get(0);
		private final RuleCall cTypeTypeDefinitionIDTerminalRuleCall_1_0_1 = (RuleCall)cTypeTypeDefinitionCrossReference_1_0.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//System:
		//	"system" type=[TypeDefinition] name=ID ";";
		public ParserRule getRule() { return rule; }

		//"system" type=[TypeDefinition] name=ID ";"
		public Group getGroup() { return cGroup; }

		//"system"
		public Keyword getSystemKeyword_0() { return cSystemKeyword_0; }

		//type=[TypeDefinition]
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }

		//[TypeDefinition]
		public CrossReference getTypeTypeDefinitionCrossReference_1_0() { return cTypeTypeDefinitionCrossReference_1_0; }

		//ID
		public RuleCall getTypeTypeDefinitionIDTerminalRuleCall_1_0_1() { return cTypeTypeDefinitionIDTerminalRuleCall_1_0_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//";"
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}

	public class DataElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Data");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDataKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cTypeTypeDefinitionCrossReference_1_0 = (CrossReference)cTypeAssignment_1.eContents().get(0);
		private final RuleCall cTypeTypeDefinitionIDTerminalRuleCall_1_0_1 = (RuleCall)cTypeTypeDefinitionCrossReference_1_0.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Data:
		//	"data" type=[TypeDefinition] name=ID ";";
		public ParserRule getRule() { return rule; }

		//"data" type=[TypeDefinition] name=ID ";"
		public Group getGroup() { return cGroup; }

		//"data"
		public Keyword getDataKeyword_0() { return cDataKeyword_0; }

		//type=[TypeDefinition]
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }

		//[TypeDefinition]
		public CrossReference getTypeTypeDefinitionCrossReference_1_0() { return cTypeTypeDefinitionCrossReference_1_0; }

		//ID
		public RuleCall getTypeTypeDefinitionIDTerminalRuleCall_1_0_1() { return cTypeTypeDefinitionIDTerminalRuleCall_1_0_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//";"
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}

	public class RoleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Role");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cRoleTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cRoleTypeAlternatives_0_0 = (Alternatives)cRoleTypeAssignment_0.eContents().get(0);
		private final Keyword cRoleTypeInsideRoleKeyword_0_0_0 = (Keyword)cRoleTypeAlternatives_0_0.eContents().get(0);
		private final Keyword cRoleTypeOutsideRoleKeyword_0_0_1 = (Keyword)cRoleTypeAlternatives_0_0.eContents().get(1);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cTypeTypeDefinitionCrossReference_1_0 = (CrossReference)cTypeAssignment_1.eContents().get(0);
		private final RuleCall cTypeTypeDefinitionIDTerminalRuleCall_1_0_1 = (RuleCall)cTypeTypeDefinitionCrossReference_1_0.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Role:
		//	RoleType=("insideRole" | "outsideRole") type=[TypeDefinition] name=ID ";";
		public ParserRule getRule() { return rule; }

		//RoleType=("insideRole" | "outsideRole") type=[TypeDefinition] name=ID ";"
		public Group getGroup() { return cGroup; }

		//RoleType=("insideRole" | "outsideRole")
		public Assignment getRoleTypeAssignment_0() { return cRoleTypeAssignment_0; }

		//"insideRole" | "outsideRole"
		public Alternatives getRoleTypeAlternatives_0_0() { return cRoleTypeAlternatives_0_0; }

		//"insideRole"
		public Keyword getRoleTypeInsideRoleKeyword_0_0_0() { return cRoleTypeInsideRoleKeyword_0_0_0; }

		//"outsideRole"
		public Keyword getRoleTypeOutsideRoleKeyword_0_0_1() { return cRoleTypeOutsideRoleKeyword_0_0_1; }

		//type=[TypeDefinition]
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }

		//[TypeDefinition]
		public CrossReference getTypeTypeDefinitionCrossReference_1_0() { return cTypeTypeDefinitionCrossReference_1_0; }

		//ID
		public RuleCall getTypeTypeDefinitionIDTerminalRuleCall_1_0_1() { return cTypeTypeDefinitionIDTerminalRuleCall_1_0_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//";"
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}

	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Parameter");
		private final RuleCall cTypeDefinitionParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//Parameter:
		//	TypeDefinition;
		public ParserRule getRule() { return rule; }

		//TypeDefinition
		public RuleCall getTypeDefinitionParserRuleCall() { return cTypeDefinitionParserRuleCall; }
	}

	public class BusinessProcessElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BusinessProcess");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cProcessKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cElementAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cElementProcessStartElementsParserRuleCall_3_0 = (RuleCall)cElementAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//BusinessProcess:
		//	"process" name=STRING "{" element=ProcessStartElements? "}";
		public ParserRule getRule() { return rule; }

		//"process" name=STRING "{" element=ProcessStartElements? "}"
		public Group getGroup() { return cGroup; }

		//"process"
		public Keyword getProcessKeyword_0() { return cProcessKeyword_0; }

		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//element=ProcessStartElements?
		public Assignment getElementAssignment_3() { return cElementAssignment_3; }

		//ProcessStartElements
		public RuleCall getElementProcessStartElementsParserRuleCall_3_0() { return cElementProcessStartElementsParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class ProcessStartElementsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ProcessStartElements");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cStartTimeAlternativeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cChartParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cStartAlternativeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//ProcessStartElements:
		//	StartTimeAlternative | Chart | StartAlternative;
		public ParserRule getRule() { return rule; }

		//StartTimeAlternative | Chart | StartAlternative
		public Alternatives getAlternatives() { return cAlternatives; }

		//StartTimeAlternative
		public RuleCall getStartTimeAlternativeParserRuleCall_0() { return cStartTimeAlternativeParserRuleCall_0; }

		//Chart
		public RuleCall getChartParserRuleCall_1() { return cChartParserRuleCall_1; }

		//StartAlternative
		public RuleCall getStartAlternativeParserRuleCall_2() { return cStartAlternativeParserRuleCall_2; }
	}

	public class ChartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Chart");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cChartAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cStartKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cStartElementsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cStartElementsProcessChartElementsParserRuleCall_3_0 = (RuleCall)cStartElementsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cFollowedKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cFollowedElementsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cFollowedElementsProcessElementsParserRuleCall_7_0 = (RuleCall)cFollowedElementsAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Chart:
		//	{Chart} "start" "{" startElements+=ProcessChartElements* "}" "followed" "{" followedElements+=ProcessElements* "}";
		public ParserRule getRule() { return rule; }

		//{Chart} "start" "{" startElements+=ProcessChartElements* "}" "followed" "{" followedElements+=ProcessElements* "}"
		public Group getGroup() { return cGroup; }

		//{Chart}
		public Action getChartAction_0() { return cChartAction_0; }

		//"start"
		public Keyword getStartKeyword_1() { return cStartKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//startElements+=ProcessChartElements*
		public Assignment getStartElementsAssignment_3() { return cStartElementsAssignment_3; }

		//ProcessChartElements
		public RuleCall getStartElementsProcessChartElementsParserRuleCall_3_0() { return cStartElementsProcessChartElementsParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }

		//"followed"
		public Keyword getFollowedKeyword_5() { return cFollowedKeyword_5; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }

		//followedElements+=ProcessElements*
		public Assignment getFollowedElementsAssignment_7() { return cFollowedElementsAssignment_7; }

		//ProcessElements
		public RuleCall getFollowedElementsProcessElementsParserRuleCall_7_0() { return cFollowedElementsProcessElementsParserRuleCall_7_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class StartTimeAlternativeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StartTimeAlternative");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cStarTimeAlternativeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMostlyKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cMostlyAlternativeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cMostlyAlternativeProcessStartElementsParserRuleCall_3_0 = (RuleCall)cMostlyAlternativeAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cSometimesKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cSometimesAlternativeAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cSometimesAlternativeProcessStartElementsParserRuleCall_7_0 = (RuleCall)cSometimesAlternativeAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cSometimesKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cSometimesAlternativeAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cSometimesAlternativeProcessStartElementsParserRuleCall_9_2_0 = (RuleCall)cSometimesAlternativeAssignment_9_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9_3 = (Keyword)cGroup_9.eContents().get(3);
		
		//StartTimeAlternative:
		//	{StarTimeAlternative} "mostly" "{" mostlyAlternative+=ProcessStartElements? "}" "sometimes" "{"
		//	sometimesAlternative+=ProcessStartElements? "}" ("sometimes" "{" sometimesAlternative+=ProcessStartElements? "}")*;
		public ParserRule getRule() { return rule; }

		//{StarTimeAlternative} "mostly" "{" mostlyAlternative+=ProcessStartElements? "}" "sometimes" "{"
		//sometimesAlternative+=ProcessStartElements? "}" ("sometimes" "{" sometimesAlternative+=ProcessStartElements? "}")*
		public Group getGroup() { return cGroup; }

		//{StarTimeAlternative}
		public Action getStarTimeAlternativeAction_0() { return cStarTimeAlternativeAction_0; }

		//"mostly"
		public Keyword getMostlyKeyword_1() { return cMostlyKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//mostlyAlternative+=ProcessStartElements?
		public Assignment getMostlyAlternativeAssignment_3() { return cMostlyAlternativeAssignment_3; }

		//ProcessStartElements
		public RuleCall getMostlyAlternativeProcessStartElementsParserRuleCall_3_0() { return cMostlyAlternativeProcessStartElementsParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }

		//"sometimes"
		public Keyword getSometimesKeyword_5() { return cSometimesKeyword_5; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }

		//sometimesAlternative+=ProcessStartElements?
		public Assignment getSometimesAlternativeAssignment_7() { return cSometimesAlternativeAssignment_7; }

		//ProcessStartElements
		public RuleCall getSometimesAlternativeProcessStartElementsParserRuleCall_7_0() { return cSometimesAlternativeProcessStartElementsParserRuleCall_7_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }

		//("sometimes" "{" sometimesAlternative+=ProcessStartElements? "}")*
		public Group getGroup_9() { return cGroup_9; }

		//"sometimes"
		public Keyword getSometimesKeyword_9_0() { return cSometimesKeyword_9_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_9_1() { return cLeftCurlyBracketKeyword_9_1; }

		//sometimesAlternative+=ProcessStartElements?
		public Assignment getSometimesAlternativeAssignment_9_2() { return cSometimesAlternativeAssignment_9_2; }

		//ProcessStartElements
		public RuleCall getSometimesAlternativeProcessStartElementsParserRuleCall_9_2_0() { return cSometimesAlternativeProcessStartElementsParserRuleCall_9_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_9_3() { return cRightCurlyBracketKeyword_9_3; }
	}

	public class TimeAlternativeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TimeAlternative");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTimeAlternativeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMostlyKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cMostlyAlternativeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cMostlyAlternativeProcessElementsParserRuleCall_3_0 = (RuleCall)cMostlyAlternativeAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cSometimesKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cSometimeAlternativeAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cSometimeAlternativeProcessElementsParserRuleCall_7_0 = (RuleCall)cSometimeAlternativeAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cSometimesKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cSometimeAlternativeAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cSometimeAlternativeProcessElementsParserRuleCall_9_2_0 = (RuleCall)cSometimeAlternativeAssignment_9_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9_3 = (Keyword)cGroup_9.eContents().get(3);
		
		//TimeAlternative:
		//	{TimeAlternative} "mostly" "{" mostlyAlternative+=ProcessElements* "}" "sometimes" "{"
		//	sometimeAlternative+=ProcessElements* "}" ("sometimes" "{" sometimeAlternative+=ProcessElements* "}")*;
		public ParserRule getRule() { return rule; }

		//{TimeAlternative} "mostly" "{" mostlyAlternative+=ProcessElements* "}" "sometimes" "{"
		//sometimeAlternative+=ProcessElements* "}" ("sometimes" "{" sometimeAlternative+=ProcessElements* "}")*
		public Group getGroup() { return cGroup; }

		//{TimeAlternative}
		public Action getTimeAlternativeAction_0() { return cTimeAlternativeAction_0; }

		//"mostly"
		public Keyword getMostlyKeyword_1() { return cMostlyKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//mostlyAlternative+=ProcessElements*
		public Assignment getMostlyAlternativeAssignment_3() { return cMostlyAlternativeAssignment_3; }

		//ProcessElements
		public RuleCall getMostlyAlternativeProcessElementsParserRuleCall_3_0() { return cMostlyAlternativeProcessElementsParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }

		//"sometimes"
		public Keyword getSometimesKeyword_5() { return cSometimesKeyword_5; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }

		//sometimeAlternative+=ProcessElements*
		public Assignment getSometimeAlternativeAssignment_7() { return cSometimeAlternativeAssignment_7; }

		//ProcessElements
		public RuleCall getSometimeAlternativeProcessElementsParserRuleCall_7_0() { return cSometimeAlternativeProcessElementsParserRuleCall_7_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }

		//("sometimes" "{" sometimeAlternative+=ProcessElements* "}")*
		public Group getGroup_9() { return cGroup_9; }

		//"sometimes"
		public Keyword getSometimesKeyword_9_0() { return cSometimesKeyword_9_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_9_1() { return cLeftCurlyBracketKeyword_9_1; }

		//sometimeAlternative+=ProcessElements*
		public Assignment getSometimeAlternativeAssignment_9_2() { return cSometimeAlternativeAssignment_9_2; }

		//ProcessElements
		public RuleCall getSometimeAlternativeProcessElementsParserRuleCall_9_2_0() { return cSometimeAlternativeProcessElementsParserRuleCall_9_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_9_3() { return cRightCurlyBracketKeyword_9_3; }
	}

	public class StartAlternativeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StartAlternative");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cStartAlternativeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAltKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAlternativeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAlternativeProcessStartElementsParserRuleCall_3_0 = (RuleCall)cAlternativeAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cOrKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cAlternativeAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cAlternativeProcessStartElementsParserRuleCall_7_0 = (RuleCall)cAlternativeAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cOrKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cAlternativeAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cAlternativeProcessStartElementsParserRuleCall_9_2_0 = (RuleCall)cAlternativeAssignment_9_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9_3 = (Keyword)cGroup_9.eContents().get(3);
		
		//StartAlternative:
		//	{StartAlternative} "alt" "{" alternative+=ProcessStartElements? "}" "or" "{" alternative+=ProcessStartElements? "}"
		//	("or" "{" alternative+=ProcessStartElements? "}")*;
		public ParserRule getRule() { return rule; }

		//{StartAlternative} "alt" "{" alternative+=ProcessStartElements? "}" "or" "{" alternative+=ProcessStartElements? "}"
		//("or" "{" alternative+=ProcessStartElements? "}")*
		public Group getGroup() { return cGroup; }

		//{StartAlternative}
		public Action getStartAlternativeAction_0() { return cStartAlternativeAction_0; }

		//"alt"
		public Keyword getAltKeyword_1() { return cAltKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//alternative+=ProcessStartElements?
		public Assignment getAlternativeAssignment_3() { return cAlternativeAssignment_3; }

		//ProcessStartElements
		public RuleCall getAlternativeProcessStartElementsParserRuleCall_3_0() { return cAlternativeProcessStartElementsParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }

		//"or"
		public Keyword getOrKeyword_5() { return cOrKeyword_5; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }

		//alternative+=ProcessStartElements?
		public Assignment getAlternativeAssignment_7() { return cAlternativeAssignment_7; }

		//ProcessStartElements
		public RuleCall getAlternativeProcessStartElementsParserRuleCall_7_0() { return cAlternativeProcessStartElementsParserRuleCall_7_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }

		//("or" "{" alternative+=ProcessStartElements? "}")*
		public Group getGroup_9() { return cGroup_9; }

		//"or"
		public Keyword getOrKeyword_9_0() { return cOrKeyword_9_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_9_1() { return cLeftCurlyBracketKeyword_9_1; }

		//alternative+=ProcessStartElements?
		public Assignment getAlternativeAssignment_9_2() { return cAlternativeAssignment_9_2; }

		//ProcessStartElements
		public RuleCall getAlternativeProcessStartElementsParserRuleCall_9_2_0() { return cAlternativeProcessStartElementsParserRuleCall_9_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_9_3() { return cRightCurlyBracketKeyword_9_3; }
	}

	public class AlternativeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Alternative");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAlternativeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAltKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAlternativeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAlternativeProcessElementsParserRuleCall_3_0 = (RuleCall)cAlternativeAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cOrKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cAlternativeAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cAlternativeProcessElementsParserRuleCall_7_0 = (RuleCall)cAlternativeAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cOrKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cAlternativeAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cAlternativeProcessElementsParserRuleCall_9_2_0 = (RuleCall)cAlternativeAssignment_9_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9_3 = (Keyword)cGroup_9.eContents().get(3);
		
		//Alternative:
		//	{Alternative} "alt" "{" alternative+=ProcessElements* "}" "or" "{" alternative+=ProcessElements* "}" ("or" "{"
		//	alternative+=ProcessElements* "}")*;
		public ParserRule getRule() { return rule; }

		//{Alternative} "alt" "{" alternative+=ProcessElements* "}" "or" "{" alternative+=ProcessElements* "}" ("or" "{"
		//alternative+=ProcessElements* "}")*
		public Group getGroup() { return cGroup; }

		//{Alternative}
		public Action getAlternativeAction_0() { return cAlternativeAction_0; }

		//"alt"
		public Keyword getAltKeyword_1() { return cAltKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//alternative+=ProcessElements*
		public Assignment getAlternativeAssignment_3() { return cAlternativeAssignment_3; }

		//ProcessElements
		public RuleCall getAlternativeProcessElementsParserRuleCall_3_0() { return cAlternativeProcessElementsParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }

		//"or"
		public Keyword getOrKeyword_5() { return cOrKeyword_5; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }

		//alternative+=ProcessElements*
		public Assignment getAlternativeAssignment_7() { return cAlternativeAssignment_7; }

		//ProcessElements
		public RuleCall getAlternativeProcessElementsParserRuleCall_7_0() { return cAlternativeProcessElementsParserRuleCall_7_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }

		//("or" "{" alternative+=ProcessElements* "}")*
		public Group getGroup_9() { return cGroup_9; }

		//"or"
		public Keyword getOrKeyword_9_0() { return cOrKeyword_9_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_9_1() { return cLeftCurlyBracketKeyword_9_1; }

		//alternative+=ProcessElements*
		public Assignment getAlternativeAssignment_9_2() { return cAlternativeAssignment_9_2; }

		//ProcessElements
		public RuleCall getAlternativeProcessElementsParserRuleCall_9_2_0() { return cAlternativeProcessElementsParserRuleCall_9_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_9_3() { return cRightCurlyBracketKeyword_9_3; }
	}

	public class ProcessElementsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ProcessElements");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cCommunicationParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cActivityParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cAlternativeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cTimeAlternativeParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cIFQueryParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cSystemworkParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cLoopParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		
		//ProcessElements:
		//	Communication | Activity | Alternative | TimeAlternative | IFQuery | Systemwork | Loop;
		public ParserRule getRule() { return rule; }

		//Communication | Activity | Alternative | TimeAlternative | IFQuery | Systemwork | Loop
		public Alternatives getAlternatives() { return cAlternatives; }

		//Communication
		public RuleCall getCommunicationParserRuleCall_0() { return cCommunicationParserRuleCall_0; }

		//Activity
		public RuleCall getActivityParserRuleCall_1() { return cActivityParserRuleCall_1; }

		//Alternative
		public RuleCall getAlternativeParserRuleCall_2() { return cAlternativeParserRuleCall_2; }

		//TimeAlternative
		public RuleCall getTimeAlternativeParserRuleCall_3() { return cTimeAlternativeParserRuleCall_3; }

		//IFQuery
		public RuleCall getIFQueryParserRuleCall_4() { return cIFQueryParserRuleCall_4; }

		//Systemwork
		public RuleCall getSystemworkParserRuleCall_5() { return cSystemworkParserRuleCall_5; }

		//Loop
		public RuleCall getLoopParserRuleCall_6() { return cLoopParserRuleCall_6; }
	}

	public class ProcessChartElementsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ProcessChartElements");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cCommunicationParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cActivityParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cAlternativeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cTimeAlternativeParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cSystemworkParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//ProcessChartElements:
		//	Communication | Activity | Alternative | TimeAlternative | Systemwork;
		public ParserRule getRule() { return rule; }

		//Communication | Activity | Alternative | TimeAlternative | Systemwork
		public Alternatives getAlternatives() { return cAlternatives; }

		//Communication
		public RuleCall getCommunicationParserRuleCall_0() { return cCommunicationParserRuleCall_0; }

		//Activity
		public RuleCall getActivityParserRuleCall_1() { return cActivityParserRuleCall_1; }

		//Alternative
		public RuleCall getAlternativeParserRuleCall_2() { return cAlternativeParserRuleCall_2; }

		//TimeAlternative
		public RuleCall getTimeAlternativeParserRuleCall_3() { return cTimeAlternativeParserRuleCall_3; }

		//Systemwork
		public RuleCall getSystemworkParserRuleCall_4() { return cSystemworkParserRuleCall_4; }
	}

	public class LoopElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Loop");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLoopKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cUncounterAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final Keyword cUncounterAsteriskKeyword_2_0_0 = (Keyword)cUncounterAssignment_2_0.eContents().get(0);
		private final Assignment cCounterAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final RuleCall cCounterINTTerminalRuleCall_2_1_0 = (RuleCall)cCounterAssignment_2_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cElementsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cElementsProcessElementsParserRuleCall_5_0 = (RuleCall)cElementsAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Loop:
		//	"loop" "[" (uncounter="*" | counter=INT) "]" "{" elements+=ProcessElements* "}";
		public ParserRule getRule() { return rule; }

		//"loop" "[" (uncounter="*" | counter=INT) "]" "{" elements+=ProcessElements* "}"
		public Group getGroup() { return cGroup; }

		//"loop"
		public Keyword getLoopKeyword_0() { return cLoopKeyword_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }

		//uncounter="*" | counter=INT
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//uncounter="*"
		public Assignment getUncounterAssignment_2_0() { return cUncounterAssignment_2_0; }

		//"*"
		public Keyword getUncounterAsteriskKeyword_2_0_0() { return cUncounterAsteriskKeyword_2_0_0; }

		//counter=INT
		public Assignment getCounterAssignment_2_1() { return cCounterAssignment_2_1; }

		//INT
		public RuleCall getCounterINTTerminalRuleCall_2_1_0() { return cCounterINTTerminalRuleCall_2_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//elements+=ProcessElements*
		public Assignment getElementsAssignment_5() { return cElementsAssignment_5; }

		//ProcessElements
		public RuleCall getElementsProcessElementsParserRuleCall_5_0() { return cElementsProcessElementsParserRuleCall_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class IFQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "IFQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIfKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cQueriesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cQueriesQueryTypesParserRuleCall_2_0 = (RuleCall)cQueriesAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_3_0 = (Alternatives)cGroup_3.eContents().get(0);
		private final Keyword cVerticalLineVerticalLineKeyword_3_0_0 = (Keyword)cAlternatives_3_0.eContents().get(0);
		private final Keyword cAmpersandAmpersandKeyword_3_0_1 = (Keyword)cAlternatives_3_0.eContents().get(1);
		private final Assignment cQueriesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cQueriesQueryTypesParserRuleCall_3_1_0 = (RuleCall)cQueriesAssignment_3_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cElementsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cElementsProcessElementsParserRuleCall_6_0 = (RuleCall)cElementsAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cElseKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cElementsAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cElementsProcessElementsParserRuleCall_8_2_0 = (RuleCall)cElementsAssignment_8_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8_3 = (Keyword)cGroup_8.eContents().get(3);
		
		//IFQuery:
		//	"if" "(" queries+=QueryTypes (("||" | "&&") queries+=QueryTypes)* ")" "{" elements+=ProcessElements* "}" ("else" "{"
		//	elements+=ProcessElements* "}")?;
		public ParserRule getRule() { return rule; }

		//"if" "(" queries+=QueryTypes (("||" | "&&") queries+=QueryTypes)* ")" "{" elements+=ProcessElements* "}" ("else" "{"
		//elements+=ProcessElements* "}")?
		public Group getGroup() { return cGroup; }

		//"if"
		public Keyword getIfKeyword_0() { return cIfKeyword_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }

		//queries+=QueryTypes
		public Assignment getQueriesAssignment_2() { return cQueriesAssignment_2; }

		//QueryTypes
		public RuleCall getQueriesQueryTypesParserRuleCall_2_0() { return cQueriesQueryTypesParserRuleCall_2_0; }

		//(("||" | "&&") queries+=QueryTypes)*
		public Group getGroup_3() { return cGroup_3; }

		//"||" | "&&"
		public Alternatives getAlternatives_3_0() { return cAlternatives_3_0; }

		//"||"
		public Keyword getVerticalLineVerticalLineKeyword_3_0_0() { return cVerticalLineVerticalLineKeyword_3_0_0; }

		//"&&"
		public Keyword getAmpersandAmpersandKeyword_3_0_1() { return cAmpersandAmpersandKeyword_3_0_1; }

		//queries+=QueryTypes
		public Assignment getQueriesAssignment_3_1() { return cQueriesAssignment_3_1; }

		//QueryTypes
		public RuleCall getQueriesQueryTypesParserRuleCall_3_1_0() { return cQueriesQueryTypesParserRuleCall_3_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//elements+=ProcessElements*
		public Assignment getElementsAssignment_6() { return cElementsAssignment_6; }

		//ProcessElements
		public RuleCall getElementsProcessElementsParserRuleCall_6_0() { return cElementsProcessElementsParserRuleCall_6_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }

		//("else" "{" elements+=ProcessElements* "}")?
		public Group getGroup_8() { return cGroup_8; }

		//"else"
		public Keyword getElseKeyword_8_0() { return cElseKeyword_8_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_8_1() { return cLeftCurlyBracketKeyword_8_1; }

		//elements+=ProcessElements*
		public Assignment getElementsAssignment_8_2() { return cElementsAssignment_8_2; }

		//ProcessElements
		public RuleCall getElementsProcessElementsParserRuleCall_8_2_0() { return cElementsProcessElementsParserRuleCall_8_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8_3() { return cRightCurlyBracketKeyword_8_3; }
	}

	public class QueryTypesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QueryTypes");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cQueryParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cBraceQueryParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//QueryTypes:
		//	Query | BraceQuery;
		public ParserRule getRule() { return rule; }

		//Query | BraceQuery
		public Alternatives getAlternatives() { return cAlternatives; }

		//Query
		public RuleCall getQueryParserRuleCall_0() { return cQueryParserRuleCall_0; }

		//BraceQuery
		public RuleCall getBraceQueryParserRuleCall_1() { return cBraceQueryParserRuleCall_1; }
	}

	public class QueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Query");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDataQueryParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPlayerQueryParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cBooleanQueryParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Query:
		//	DataQuery | PlayerQuery | BooleanQuery;
		public ParserRule getRule() { return rule; }

		//DataQuery | PlayerQuery | BooleanQuery
		public Alternatives getAlternatives() { return cAlternatives; }

		//DataQuery
		public RuleCall getDataQueryParserRuleCall_0() { return cDataQueryParserRuleCall_0; }

		//PlayerQuery
		public RuleCall getPlayerQueryParserRuleCall_1() { return cPlayerQueryParserRuleCall_1; }

		//BooleanQuery
		public RuleCall getBooleanQueryParserRuleCall_2() { return cBooleanQueryParserRuleCall_2; }
	}

	public class BooleanQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BooleanQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cExclamationMarkKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cBooleanValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cBooleanValueBooleanCrossReference_1_0 = (CrossReference)cBooleanValueAssignment_1.eContents().get(0);
		private final RuleCall cBooleanValueBooleanIDTerminalRuleCall_1_0_1 = (RuleCall)cBooleanValueBooleanCrossReference_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cIsKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cBooleanAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final Alternatives cBooleanAlternatives_2_1_0 = (Alternatives)cBooleanAssignment_2_1.eContents().get(0);
		private final Keyword cBooleanTrueKeyword_2_1_0_0 = (Keyword)cBooleanAlternatives_2_1_0.eContents().get(0);
		private final Keyword cBooleanFalseKeyword_2_1_0_1 = (Keyword)cBooleanAlternatives_2_1_0.eContents().get(1);
		
		//BooleanQuery:
		//	"!"? booleanValue=[Boolean] ("is" boolean=("true" | "false"))?;
		public ParserRule getRule() { return rule; }

		//"!"? booleanValue=[Boolean] ("is" boolean=("true" | "false"))?
		public Group getGroup() { return cGroup; }

		//"!"?
		public Keyword getExclamationMarkKeyword_0() { return cExclamationMarkKeyword_0; }

		//booleanValue=[Boolean]
		public Assignment getBooleanValueAssignment_1() { return cBooleanValueAssignment_1; }

		//[Boolean]
		public CrossReference getBooleanValueBooleanCrossReference_1_0() { return cBooleanValueBooleanCrossReference_1_0; }

		//ID
		public RuleCall getBooleanValueBooleanIDTerminalRuleCall_1_0_1() { return cBooleanValueBooleanIDTerminalRuleCall_1_0_1; }

		//("is" boolean=("true" | "false"))?
		public Group getGroup_2() { return cGroup_2; }

		//"is"
		public Keyword getIsKeyword_2_0() { return cIsKeyword_2_0; }

		//boolean=("true" | "false")
		public Assignment getBooleanAssignment_2_1() { return cBooleanAssignment_2_1; }

		//"true" | "false"
		public Alternatives getBooleanAlternatives_2_1_0() { return cBooleanAlternatives_2_1_0; }

		//"true"
		public Keyword getBooleanTrueKeyword_2_1_0_0() { return cBooleanTrueKeyword_2_1_0_0; }

		//"false"
		public Keyword getBooleanFalseKeyword_2_1_0_1() { return cBooleanFalseKeyword_2_1_0_1; }
	}

	public class DataQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DataQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cExclamationAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cExclamationExclamationMarkKeyword_0_0 = (Keyword)cExclamationAssignment_0.eContents().get(0);
		private final Assignment cObjectOneAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cObjectOneObjectCrossReference_1_0 = (CrossReference)cObjectOneAssignment_1.eContents().get(0);
		private final RuleCall cObjectOneObjectIDTerminalRuleCall_1_0_1 = (RuleCall)cObjectOneObjectCrossReference_1_0.eContents().get(1);
		private final Assignment cConditionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Alternatives cConditionAlternatives_2_0 = (Alternatives)cConditionAssignment_2.eContents().get(0);
		private final Keyword cConditionExclamationMarkEqualsSignKeyword_2_0_0 = (Keyword)cConditionAlternatives_2_0.eContents().get(0);
		private final Keyword cConditionEqualsSignEqualsSignKeyword_2_0_1 = (Keyword)cConditionAlternatives_2_0.eContents().get(1);
		private final Assignment cObjectTwoAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cObjectTwoObjectCrossReference_3_0 = (CrossReference)cObjectTwoAssignment_3.eContents().get(0);
		private final RuleCall cObjectTwoObjectIDTerminalRuleCall_3_0_1 = (RuleCall)cObjectTwoObjectCrossReference_3_0.eContents().get(1);
		
		//DataQuery:
		//	exclamation?="!"? objectOne=[Object] condition=("!=" | "==") objectTwo=[Object];
		public ParserRule getRule() { return rule; }

		//exclamation?="!"? objectOne=[Object] condition=("!=" | "==") objectTwo=[Object]
		public Group getGroup() { return cGroup; }

		//exclamation?="!"?
		public Assignment getExclamationAssignment_0() { return cExclamationAssignment_0; }

		//"!"
		public Keyword getExclamationExclamationMarkKeyword_0_0() { return cExclamationExclamationMarkKeyword_0_0; }

		//objectOne=[Object]
		public Assignment getObjectOneAssignment_1() { return cObjectOneAssignment_1; }

		//[Object]
		public CrossReference getObjectOneObjectCrossReference_1_0() { return cObjectOneObjectCrossReference_1_0; }

		//ID
		public RuleCall getObjectOneObjectIDTerminalRuleCall_1_0_1() { return cObjectOneObjectIDTerminalRuleCall_1_0_1; }

		//condition=("!=" | "==")
		public Assignment getConditionAssignment_2() { return cConditionAssignment_2; }

		//"!=" | "=="
		public Alternatives getConditionAlternatives_2_0() { return cConditionAlternatives_2_0; }

		//"!="
		public Keyword getConditionExclamationMarkEqualsSignKeyword_2_0_0() { return cConditionExclamationMarkEqualsSignKeyword_2_0_0; }

		//"=="
		public Keyword getConditionEqualsSignEqualsSignKeyword_2_0_1() { return cConditionEqualsSignEqualsSignKeyword_2_0_1; }

		//objectTwo=[Object]
		public Assignment getObjectTwoAssignment_3() { return cObjectTwoAssignment_3; }

		//[Object]
		public CrossReference getObjectTwoObjectCrossReference_3_0() { return cObjectTwoObjectCrossReference_3_0; }

		//ID
		public RuleCall getObjectTwoObjectIDTerminalRuleCall_3_0_1() { return cObjectTwoObjectIDTerminalRuleCall_3_0_1; }
	}

	public class BraceQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BraceQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cExclamationMarkKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cQueriesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cQueriesQueryTypesParserRuleCall_2_0 = (RuleCall)cQueriesAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_3_0 = (Alternatives)cGroup_3.eContents().get(0);
		private final Keyword cVerticalLineVerticalLineKeyword_3_0_0 = (Keyword)cAlternatives_3_0.eContents().get(0);
		private final Keyword cAmpersandAmpersandKeyword_3_0_1 = (Keyword)cAlternatives_3_0.eContents().get(1);
		private final Assignment cQueriesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cQueriesQueryTypesParserRuleCall_3_1_0 = (RuleCall)cQueriesAssignment_3_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//BraceQuery:
		//	"!"? "(" queries+=QueryTypes (("||" | "&&") queries+=QueryTypes)* ")";
		public ParserRule getRule() { return rule; }

		//"!"? "(" queries+=QueryTypes (("||" | "&&") queries+=QueryTypes)* ")"
		public Group getGroup() { return cGroup; }

		//"!"?
		public Keyword getExclamationMarkKeyword_0() { return cExclamationMarkKeyword_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }

		//queries+=QueryTypes
		public Assignment getQueriesAssignment_2() { return cQueriesAssignment_2; }

		//QueryTypes
		public RuleCall getQueriesQueryTypesParserRuleCall_2_0() { return cQueriesQueryTypesParserRuleCall_2_0; }

		//(("||" | "&&") queries+=QueryTypes)*
		public Group getGroup_3() { return cGroup_3; }

		//"||" | "&&"
		public Alternatives getAlternatives_3_0() { return cAlternatives_3_0; }

		//"||"
		public Keyword getVerticalLineVerticalLineKeyword_3_0_0() { return cVerticalLineVerticalLineKeyword_3_0_0; }

		//"&&"
		public Keyword getAmpersandAmpersandKeyword_3_0_1() { return cAmpersandAmpersandKeyword_3_0_1; }

		//queries+=QueryTypes
		public Assignment getQueriesAssignment_3_1() { return cQueriesAssignment_3_1; }

		//QueryTypes
		public RuleCall getQueriesQueryTypesParserRuleCall_3_1_0() { return cQueriesQueryTypesParserRuleCall_3_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}

	public class PlayerQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PlayerQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cExclamationMarkKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPlayerAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cPlayerRoleCrossReference_1_0 = (CrossReference)cPlayerAssignment_1.eContents().get(0);
		private final RuleCall cPlayerRoleIDTerminalRuleCall_1_0_1 = (RuleCall)cPlayerRoleCrossReference_1_0.eContents().get(1);
		private final Keyword cFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cStatusAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cStatusStateCrossReference_3_0 = (CrossReference)cStatusAssignment_3.eContents().get(0);
		private final RuleCall cStatusStateIDTerminalRuleCall_3_0_1 = (RuleCall)cStatusStateCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cIsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cBooleanAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final Alternatives cBooleanAlternatives_4_1_0 = (Alternatives)cBooleanAssignment_4_1.eContents().get(0);
		private final Keyword cBooleanTrueKeyword_4_1_0_0 = (Keyword)cBooleanAlternatives_4_1_0.eContents().get(0);
		private final Keyword cBooleanFalseKeyword_4_1_0_1 = (Keyword)cBooleanAlternatives_4_1_0.eContents().get(1);
		
		//PlayerQuery:
		//	"!"? player=[Role] "." status=[State] ("is" boolean=("true" | "false"))?;
		public ParserRule getRule() { return rule; }

		//"!"? player=[Role] "." status=[State] ("is" boolean=("true" | "false"))?
		public Group getGroup() { return cGroup; }

		//"!"?
		public Keyword getExclamationMarkKeyword_0() { return cExclamationMarkKeyword_0; }

		//player=[Role]
		public Assignment getPlayerAssignment_1() { return cPlayerAssignment_1; }

		//[Role]
		public CrossReference getPlayerRoleCrossReference_1_0() { return cPlayerRoleCrossReference_1_0; }

		//ID
		public RuleCall getPlayerRoleIDTerminalRuleCall_1_0_1() { return cPlayerRoleIDTerminalRuleCall_1_0_1; }

		//"."
		public Keyword getFullStopKeyword_2() { return cFullStopKeyword_2; }

		//status=[State]
		public Assignment getStatusAssignment_3() { return cStatusAssignment_3; }

		//[State]
		public CrossReference getStatusStateCrossReference_3_0() { return cStatusStateCrossReference_3_0; }

		//ID
		public RuleCall getStatusStateIDTerminalRuleCall_3_0_1() { return cStatusStateIDTerminalRuleCall_3_0_1; }

		//("is" boolean=("true" | "false"))?
		public Group getGroup_4() { return cGroup_4; }

		//"is"
		public Keyword getIsKeyword_4_0() { return cIsKeyword_4_0; }

		//boolean=("true" | "false")
		public Assignment getBooleanAssignment_4_1() { return cBooleanAssignment_4_1; }

		//"true" | "false"
		public Alternatives getBooleanAlternatives_4_1_0() { return cBooleanAlternatives_4_1_0; }

		//"true"
		public Keyword getBooleanTrueKeyword_4_1_0_0() { return cBooleanTrueKeyword_4_1_0_0; }

		//"false"
		public Keyword getBooleanFalseKeyword_4_1_0_1() { return cBooleanFalseKeyword_4_1_0_1; }
	}

	public class CommunicationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Communication");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cImportanceAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cImportanceAlternatives_0_0 = (Alternatives)cImportanceAssignment_0.eContents().get(0);
		private final Keyword cImportanceImKeyword_0_0_0 = (Keyword)cImportanceAlternatives_0_0.eContents().get(0);
		private final Keyword cImportanceUnimKeyword_0_0_1 = (Keyword)cImportanceAlternatives_0_0.eContents().get(1);
		private final Assignment cSenderAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cSenderObjectCrossReference_1_0 = (CrossReference)cSenderAssignment_1.eContents().get(0);
		private final RuleCall cSenderObjectIDTerminalRuleCall_1_0_1 = (RuleCall)cSenderObjectCrossReference_1_0.eContents().get(1);
		private final Assignment cExecutionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Alternatives cExecutionAlternatives_2_0 = (Alternatives)cExecutionAssignment_2.eContents().get(0);
		private final Keyword cExecutionCanKeyword_2_0_0 = (Keyword)cExecutionAlternatives_2_0.eContents().get(0);
		private final Keyword cExecutionMustKeyword_2_0_1 = (Keyword)cExecutionAlternatives_2_0.eContents().get(1);
		private final Keyword cSendKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cToKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cReceiverAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cReceiverRoleCrossReference_5_0 = (CrossReference)cReceiverAssignment_5.eContents().get(0);
		private final RuleCall cReceiverRoleIDTerminalRuleCall_5_0_1 = (RuleCall)cReceiverRoleCrossReference_5_0.eContents().get(1);
		private final Keyword cFullStopKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cMessageAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cMessageMessageCrossReference_7_0 = (CrossReference)cMessageAssignment_7.eContents().get(0);
		private final RuleCall cMessageMessageIDTerminalRuleCall_7_0_1 = (RuleCall)cMessageMessageCrossReference_7_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Assignment cParameterAssignment_9_0 = (Assignment)cGroup_9.eContents().get(0);
		private final CrossReference cParameterObjectCrossReference_9_0_0 = (CrossReference)cParameterAssignment_9_0.eContents().get(0);
		private final RuleCall cParameterObjectIDTerminalRuleCall_9_0_0_1 = (RuleCall)cParameterObjectCrossReference_9_0_0.eContents().get(1);
		private final Group cGroup_9_1 = (Group)cGroup_9.eContents().get(1);
		private final Keyword cCommaKeyword_9_1_0 = (Keyword)cGroup_9_1.eContents().get(0);
		private final Assignment cParameterAssignment_9_1_1 = (Assignment)cGroup_9_1.eContents().get(1);
		private final CrossReference cParameterObjectCrossReference_9_1_1_0 = (CrossReference)cParameterAssignment_9_1_1.eContents().get(0);
		private final RuleCall cParameterObjectIDTerminalRuleCall_9_1_1_0_1 = (RuleCall)cParameterObjectCrossReference_9_1_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cViaKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cChannelAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final CrossReference cChannelChannelDefintionCrossReference_11_1_0 = (CrossReference)cChannelAssignment_11_1.eContents().get(0);
		private final RuleCall cChannelChannelDefintionIDTerminalRuleCall_11_1_0_1 = (RuleCall)cChannelChannelDefintionCrossReference_11_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//Communication:
		//	importance=("im" | "unim")? sender=[Object] execution=("can" | "must") "send" "to" receiver=[Role] "."
		//	message=[Message] "(" (parameter+=[Object] ("," parameter+=[Object])*)? ")" ("via" channel=[ChannelDefintion])? ";";
		public ParserRule getRule() { return rule; }

		//importance=("im" | "unim")? sender=[Object] execution=("can" | "must") "send" "to" receiver=[Role] "." message=[Message]
		//"(" (parameter+=[Object] ("," parameter+=[Object])*)? ")" ("via" channel=[ChannelDefintion])? ";"
		public Group getGroup() { return cGroup; }

		//importance=("im" | "unim")?
		public Assignment getImportanceAssignment_0() { return cImportanceAssignment_0; }

		//"im" | "unim"
		public Alternatives getImportanceAlternatives_0_0() { return cImportanceAlternatives_0_0; }

		//"im"
		public Keyword getImportanceImKeyword_0_0_0() { return cImportanceImKeyword_0_0_0; }

		//"unim"
		public Keyword getImportanceUnimKeyword_0_0_1() { return cImportanceUnimKeyword_0_0_1; }

		//sender=[Object]
		public Assignment getSenderAssignment_1() { return cSenderAssignment_1; }

		//[Object]
		public CrossReference getSenderObjectCrossReference_1_0() { return cSenderObjectCrossReference_1_0; }

		//ID
		public RuleCall getSenderObjectIDTerminalRuleCall_1_0_1() { return cSenderObjectIDTerminalRuleCall_1_0_1; }

		//execution=("can" | "must")
		public Assignment getExecutionAssignment_2() { return cExecutionAssignment_2; }

		//"can" | "must"
		public Alternatives getExecutionAlternatives_2_0() { return cExecutionAlternatives_2_0; }

		//"can"
		public Keyword getExecutionCanKeyword_2_0_0() { return cExecutionCanKeyword_2_0_0; }

		//"must"
		public Keyword getExecutionMustKeyword_2_0_1() { return cExecutionMustKeyword_2_0_1; }

		//"send"
		public Keyword getSendKeyword_3() { return cSendKeyword_3; }

		//"to"
		public Keyword getToKeyword_4() { return cToKeyword_4; }

		//receiver=[Role]
		public Assignment getReceiverAssignment_5() { return cReceiverAssignment_5; }

		//[Role]
		public CrossReference getReceiverRoleCrossReference_5_0() { return cReceiverRoleCrossReference_5_0; }

		//ID
		public RuleCall getReceiverRoleIDTerminalRuleCall_5_0_1() { return cReceiverRoleIDTerminalRuleCall_5_0_1; }

		//"."
		public Keyword getFullStopKeyword_6() { return cFullStopKeyword_6; }

		//message=[Message]
		public Assignment getMessageAssignment_7() { return cMessageAssignment_7; }

		//[Message]
		public CrossReference getMessageMessageCrossReference_7_0() { return cMessageMessageCrossReference_7_0; }

		//ID
		public RuleCall getMessageMessageIDTerminalRuleCall_7_0_1() { return cMessageMessageIDTerminalRuleCall_7_0_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_8() { return cLeftParenthesisKeyword_8; }

		//(parameter+=[Object] ("," parameter+=[Object])*)?
		public Group getGroup_9() { return cGroup_9; }

		//parameter+=[Object]
		public Assignment getParameterAssignment_9_0() { return cParameterAssignment_9_0; }

		//[Object]
		public CrossReference getParameterObjectCrossReference_9_0_0() { return cParameterObjectCrossReference_9_0_0; }

		//ID
		public RuleCall getParameterObjectIDTerminalRuleCall_9_0_0_1() { return cParameterObjectIDTerminalRuleCall_9_0_0_1; }

		//("," parameter+=[Object])*
		public Group getGroup_9_1() { return cGroup_9_1; }

		//","
		public Keyword getCommaKeyword_9_1_0() { return cCommaKeyword_9_1_0; }

		//parameter+=[Object]
		public Assignment getParameterAssignment_9_1_1() { return cParameterAssignment_9_1_1; }

		//[Object]
		public CrossReference getParameterObjectCrossReference_9_1_1_0() { return cParameterObjectCrossReference_9_1_1_0; }

		//ID
		public RuleCall getParameterObjectIDTerminalRuleCall_9_1_1_0_1() { return cParameterObjectIDTerminalRuleCall_9_1_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_10() { return cRightParenthesisKeyword_10; }

		//("via" channel=[ChannelDefintion])?
		public Group getGroup_11() { return cGroup_11; }

		//"via"
		public Keyword getViaKeyword_11_0() { return cViaKeyword_11_0; }

		//channel=[ChannelDefintion]
		public Assignment getChannelAssignment_11_1() { return cChannelAssignment_11_1; }

		//[ChannelDefintion]
		public CrossReference getChannelChannelDefintionCrossReference_11_1_0() { return cChannelChannelDefintionCrossReference_11_1_0; }

		//ID
		public RuleCall getChannelChannelDefintionIDTerminalRuleCall_11_1_0_1() { return cChannelChannelDefintionIDTerminalRuleCall_11_1_0_1; }

		//";"
		public Keyword getSemicolonKeyword_12() { return cSemicolonKeyword_12; }
	}

	public class ActivityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Activity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cImportanceAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cImportanceAlternatives_0_0 = (Alternatives)cImportanceAssignment_0.eContents().get(0);
		private final Keyword cImportanceImKeyword_0_0_0 = (Keyword)cImportanceAlternatives_0_0.eContents().get(0);
		private final Keyword cImportanceUnimKeyword_0_0_1 = (Keyword)cImportanceAlternatives_0_0.eContents().get(1);
		private final Assignment cPlayerAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cPlayerRoleCrossReference_1_0 = (CrossReference)cPlayerAssignment_1.eContents().get(0);
		private final RuleCall cPlayerRoleIDTerminalRuleCall_1_0_1 = (RuleCall)cPlayerRoleCrossReference_1_0.eContents().get(1);
		private final Assignment cExecutionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Alternatives cExecutionAlternatives_2_0 = (Alternatives)cExecutionAssignment_2.eContents().get(0);
		private final Keyword cExecutionCanKeyword_2_0_0 = (Keyword)cExecutionAlternatives_2_0.eContents().get(0);
		private final Keyword cExecutionMustKeyword_2_0_1 = (Keyword)cExecutionAlternatives_2_0.eContents().get(1);
		private final Keyword cDoKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTaskAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cTaskTaskCrossReference_4_0 = (CrossReference)cTaskAssignment_4.eContents().get(0);
		private final RuleCall cTaskTaskIDTerminalRuleCall_4_0_1 = (RuleCall)cTaskTaskCrossReference_4_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Assignment cParameterAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final CrossReference cParameterObjectCrossReference_6_0_0 = (CrossReference)cParameterAssignment_6_0.eContents().get(0);
		private final RuleCall cParameterObjectIDTerminalRuleCall_6_0_0_1 = (RuleCall)cParameterObjectCrossReference_6_0_0.eContents().get(1);
		private final Group cGroup_6_1 = (Group)cGroup_6.eContents().get(1);
		private final Keyword cCommaKeyword_6_1_0 = (Keyword)cGroup_6_1.eContents().get(0);
		private final Assignment cParameterAssignment_6_1_1 = (Assignment)cGroup_6_1.eContents().get(1);
		private final CrossReference cParameterObjectCrossReference_6_1_1_0 = (CrossReference)cParameterAssignment_6_1_1.eContents().get(0);
		private final RuleCall cParameterObjectIDTerminalRuleCall_6_1_1_0_1 = (RuleCall)cParameterObjectCrossReference_6_1_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cSemicolonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Activity:
		//	importance=("im" | "unim")? player=[Role] execution=("can" | "must") "do" task=[Task] "(" (parameter+=[Object] (","
		//	parameter+=[Object])*)? ")" ";";
		public ParserRule getRule() { return rule; }

		//importance=("im" | "unim")? player=[Role] execution=("can" | "must") "do" task=[Task] "(" (parameter+=[Object] (","
		//parameter+=[Object])*)? ")" ";"
		public Group getGroup() { return cGroup; }

		//importance=("im" | "unim")?
		public Assignment getImportanceAssignment_0() { return cImportanceAssignment_0; }

		//"im" | "unim"
		public Alternatives getImportanceAlternatives_0_0() { return cImportanceAlternatives_0_0; }

		//"im"
		public Keyword getImportanceImKeyword_0_0_0() { return cImportanceImKeyword_0_0_0; }

		//"unim"
		public Keyword getImportanceUnimKeyword_0_0_1() { return cImportanceUnimKeyword_0_0_1; }

		//player=[Role]
		public Assignment getPlayerAssignment_1() { return cPlayerAssignment_1; }

		//[Role]
		public CrossReference getPlayerRoleCrossReference_1_0() { return cPlayerRoleCrossReference_1_0; }

		//ID
		public RuleCall getPlayerRoleIDTerminalRuleCall_1_0_1() { return cPlayerRoleIDTerminalRuleCall_1_0_1; }

		//execution=("can" | "must")
		public Assignment getExecutionAssignment_2() { return cExecutionAssignment_2; }

		//"can" | "must"
		public Alternatives getExecutionAlternatives_2_0() { return cExecutionAlternatives_2_0; }

		//"can"
		public Keyword getExecutionCanKeyword_2_0_0() { return cExecutionCanKeyword_2_0_0; }

		//"must"
		public Keyword getExecutionMustKeyword_2_0_1() { return cExecutionMustKeyword_2_0_1; }

		//"do"
		public Keyword getDoKeyword_3() { return cDoKeyword_3; }

		//task=[Task]
		public Assignment getTaskAssignment_4() { return cTaskAssignment_4; }

		//[Task]
		public CrossReference getTaskTaskCrossReference_4_0() { return cTaskTaskCrossReference_4_0; }

		//ID
		public RuleCall getTaskTaskIDTerminalRuleCall_4_0_1() { return cTaskTaskIDTerminalRuleCall_4_0_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_5() { return cLeftParenthesisKeyword_5; }

		//(parameter+=[Object] ("," parameter+=[Object])*)?
		public Group getGroup_6() { return cGroup_6; }

		//parameter+=[Object]
		public Assignment getParameterAssignment_6_0() { return cParameterAssignment_6_0; }

		//[Object]
		public CrossReference getParameterObjectCrossReference_6_0_0() { return cParameterObjectCrossReference_6_0_0; }

		//ID
		public RuleCall getParameterObjectIDTerminalRuleCall_6_0_0_1() { return cParameterObjectIDTerminalRuleCall_6_0_0_1; }

		//("," parameter+=[Object])*
		public Group getGroup_6_1() { return cGroup_6_1; }

		//","
		public Keyword getCommaKeyword_6_1_0() { return cCommaKeyword_6_1_0; }

		//parameter+=[Object]
		public Assignment getParameterAssignment_6_1_1() { return cParameterAssignment_6_1_1; }

		//[Object]
		public CrossReference getParameterObjectCrossReference_6_1_1_0() { return cParameterObjectCrossReference_6_1_1_0; }

		//ID
		public RuleCall getParameterObjectIDTerminalRuleCall_6_1_1_0_1() { return cParameterObjectIDTerminalRuleCall_6_1_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }

		//";"
		public Keyword getSemicolonKeyword_8() { return cSemicolonKeyword_8; }
	}

	public class SystemworkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Systemwork");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cReturnObjectAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final CrossReference cReturnObjectObjectCrossReference_0_0_0 = (CrossReference)cReturnObjectAssignment_0_0.eContents().get(0);
		private final RuleCall cReturnObjectObjectIDTerminalRuleCall_0_0_0_1 = (RuleCall)cReturnObjectObjectCrossReference_0_0_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cImportanceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cImportanceAlternatives_1_0 = (Alternatives)cImportanceAssignment_1.eContents().get(0);
		private final Keyword cImportanceImKeyword_1_0_0 = (Keyword)cImportanceAlternatives_1_0.eContents().get(0);
		private final Keyword cImportanceUnimKeyword_1_0_1 = (Keyword)cImportanceAlternatives_1_0.eContents().get(1);
		private final Assignment cPlayerAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cPlayerRoleCrossReference_2_0 = (CrossReference)cPlayerAssignment_2.eContents().get(0);
		private final RuleCall cPlayerRoleIDTerminalRuleCall_2_0_1 = (RuleCall)cPlayerRoleCrossReference_2_0.eContents().get(1);
		private final Assignment cExecutionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Alternatives cExecutionAlternatives_3_0 = (Alternatives)cExecutionAssignment_3.eContents().get(0);
		private final Keyword cExecutionCanKeyword_3_0_0 = (Keyword)cExecutionAlternatives_3_0.eContents().get(0);
		private final Keyword cExecutionMustKeyword_3_0_1 = (Keyword)cExecutionAlternatives_3_0.eContents().get(1);
		private final Keyword cSystemworkKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cSystemAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cSystemSystemCrossReference_5_0 = (CrossReference)cSystemAssignment_5.eContents().get(0);
		private final RuleCall cSystemSystemIDTerminalRuleCall_5_0_1 = (RuleCall)cSystemSystemCrossReference_5_0.eContents().get(1);
		private final Keyword cFullStopKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cFunctionAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cFunctionFunctionCrossReference_7_0 = (CrossReference)cFunctionAssignment_7.eContents().get(0);
		private final RuleCall cFunctionFunctionIDTerminalRuleCall_7_0_1 = (RuleCall)cFunctionFunctionCrossReference_7_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Assignment cParameterAssignment_9_0 = (Assignment)cGroup_9.eContents().get(0);
		private final CrossReference cParameterObjectCrossReference_9_0_0 = (CrossReference)cParameterAssignment_9_0.eContents().get(0);
		private final RuleCall cParameterObjectIDTerminalRuleCall_9_0_0_1 = (RuleCall)cParameterObjectCrossReference_9_0_0.eContents().get(1);
		private final Group cGroup_9_1 = (Group)cGroup_9.eContents().get(1);
		private final Keyword cCommaKeyword_9_1_0 = (Keyword)cGroup_9_1.eContents().get(0);
		private final Assignment cParameterAssignment_9_1_1 = (Assignment)cGroup_9_1.eContents().get(1);
		private final CrossReference cParameterObjectCrossReference_9_1_1_0 = (CrossReference)cParameterAssignment_9_1_1.eContents().get(0);
		private final RuleCall cParameterObjectIDTerminalRuleCall_9_1_1_0_1 = (RuleCall)cParameterObjectCrossReference_9_1_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cSemicolonKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//Systemwork:
		//	(returnObject=[Object] "=")? importance=("im" | "unim")? player=[Role] execution=("can" | "must") "systemwork"
		//	system=[System] "." function=[Function] "(" (parameter+=[Object] ("," parameter+=[Object])*)? ")" ";";
		public ParserRule getRule() { return rule; }

		//(returnObject=[Object] "=")? importance=("im" | "unim")? player=[Role] execution=("can" | "must") "systemwork"
		//system=[System] "." function=[Function] "(" (parameter+=[Object] ("," parameter+=[Object])*)? ")" ";"
		public Group getGroup() { return cGroup; }

		//(returnObject=[Object] "=")?
		public Group getGroup_0() { return cGroup_0; }

		//returnObject=[Object]
		public Assignment getReturnObjectAssignment_0_0() { return cReturnObjectAssignment_0_0; }

		//[Object]
		public CrossReference getReturnObjectObjectCrossReference_0_0_0() { return cReturnObjectObjectCrossReference_0_0_0; }

		//ID
		public RuleCall getReturnObjectObjectIDTerminalRuleCall_0_0_0_1() { return cReturnObjectObjectIDTerminalRuleCall_0_0_0_1; }

		//"="
		public Keyword getEqualsSignKeyword_0_1() { return cEqualsSignKeyword_0_1; }

		//importance=("im" | "unim")?
		public Assignment getImportanceAssignment_1() { return cImportanceAssignment_1; }

		//"im" | "unim"
		public Alternatives getImportanceAlternatives_1_0() { return cImportanceAlternatives_1_0; }

		//"im"
		public Keyword getImportanceImKeyword_1_0_0() { return cImportanceImKeyword_1_0_0; }

		//"unim"
		public Keyword getImportanceUnimKeyword_1_0_1() { return cImportanceUnimKeyword_1_0_1; }

		//player=[Role]
		public Assignment getPlayerAssignment_2() { return cPlayerAssignment_2; }

		//[Role]
		public CrossReference getPlayerRoleCrossReference_2_0() { return cPlayerRoleCrossReference_2_0; }

		//ID
		public RuleCall getPlayerRoleIDTerminalRuleCall_2_0_1() { return cPlayerRoleIDTerminalRuleCall_2_0_1; }

		//execution=("can" | "must")
		public Assignment getExecutionAssignment_3() { return cExecutionAssignment_3; }

		//"can" | "must"
		public Alternatives getExecutionAlternatives_3_0() { return cExecutionAlternatives_3_0; }

		//"can"
		public Keyword getExecutionCanKeyword_3_0_0() { return cExecutionCanKeyword_3_0_0; }

		//"must"
		public Keyword getExecutionMustKeyword_3_0_1() { return cExecutionMustKeyword_3_0_1; }

		//"systemwork"
		public Keyword getSystemworkKeyword_4() { return cSystemworkKeyword_4; }

		//system=[System]
		public Assignment getSystemAssignment_5() { return cSystemAssignment_5; }

		//[System]
		public CrossReference getSystemSystemCrossReference_5_0() { return cSystemSystemCrossReference_5_0; }

		//ID
		public RuleCall getSystemSystemIDTerminalRuleCall_5_0_1() { return cSystemSystemIDTerminalRuleCall_5_0_1; }

		//"."
		public Keyword getFullStopKeyword_6() { return cFullStopKeyword_6; }

		//function=[Function]
		public Assignment getFunctionAssignment_7() { return cFunctionAssignment_7; }

		//[Function]
		public CrossReference getFunctionFunctionCrossReference_7_0() { return cFunctionFunctionCrossReference_7_0; }

		//ID
		public RuleCall getFunctionFunctionIDTerminalRuleCall_7_0_1() { return cFunctionFunctionIDTerminalRuleCall_7_0_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_8() { return cLeftParenthesisKeyword_8; }

		//(parameter+=[Object] ("," parameter+=[Object])*)?
		public Group getGroup_9() { return cGroup_9; }

		//parameter+=[Object]
		public Assignment getParameterAssignment_9_0() { return cParameterAssignment_9_0; }

		//[Object]
		public CrossReference getParameterObjectCrossReference_9_0_0() { return cParameterObjectCrossReference_9_0_0; }

		//ID
		public RuleCall getParameterObjectIDTerminalRuleCall_9_0_0_1() { return cParameterObjectIDTerminalRuleCall_9_0_0_1; }

		//("," parameter+=[Object])*
		public Group getGroup_9_1() { return cGroup_9_1; }

		//","
		public Keyword getCommaKeyword_9_1_0() { return cCommaKeyword_9_1_0; }

		//parameter+=[Object]
		public Assignment getParameterAssignment_9_1_1() { return cParameterAssignment_9_1_1; }

		//[Object]
		public CrossReference getParameterObjectCrossReference_9_1_1_0() { return cParameterObjectCrossReference_9_1_1_0; }

		//ID
		public RuleCall getParameterObjectIDTerminalRuleCall_9_1_1_0_1() { return cParameterObjectIDTerminalRuleCall_9_1_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_10() { return cRightParenthesisKeyword_10; }

		//";"
		public Keyword getSemicolonKeyword_11() { return cSemicolonKeyword_11; }
	}
	
	
	private final DomainmodelElements pDomainmodel;
	private final TypeDefinitionElements pTypeDefinition;
	private final DatatypeElements pDatatype;
	private final SystemtypeElements pSystemtype;
	private final ChannelDefintionElements pChannelDefintion;
	private final RoletypeElements pRoletype;
	private final StateElements pState;
	private final TaskElements pTask;
	private final MessageElements pMessage;
	private final FunctionElements pFunction;
	private final InterviewElements pInterview;
	private final ObjectElements pObject;
	private final BooleanElements pBoolean;
	private final SystemElements pSystem;
	private final DataElements pData;
	private final RoleElements pRole;
	private final ParameterElements pParameter;
	private final BusinessProcessElements pBusinessProcess;
	private final ProcessStartElementsElements pProcessStartElements;
	private final ChartElements pChart;
	private final StartTimeAlternativeElements pStartTimeAlternative;
	private final TimeAlternativeElements pTimeAlternative;
	private final StartAlternativeElements pStartAlternative;
	private final AlternativeElements pAlternative;
	private final ProcessElementsElements pProcessElements;
	private final ProcessChartElementsElements pProcessChartElements;
	private final LoopElements pLoop;
	private final IFQueryElements pIFQuery;
	private final QueryTypesElements pQueryTypes;
	private final QueryElements pQuery;
	private final BooleanQueryElements pBooleanQuery;
	private final DataQueryElements pDataQuery;
	private final BraceQueryElements pBraceQuery;
	private final PlayerQueryElements pPlayerQuery;
	private final CommunicationElements pCommunication;
	private final ActivityElements pActivity;
	private final SystemworkElements pSystemwork;
	private final TerminalRule tID;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MyDslGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pDomainmodel = new DomainmodelElements();
		this.pTypeDefinition = new TypeDefinitionElements();
		this.pDatatype = new DatatypeElements();
		this.pSystemtype = new SystemtypeElements();
		this.pChannelDefintion = new ChannelDefintionElements();
		this.pRoletype = new RoletypeElements();
		this.pState = new StateElements();
		this.pTask = new TaskElements();
		this.pMessage = new MessageElements();
		this.pFunction = new FunctionElements();
		this.pInterview = new InterviewElements();
		this.pObject = new ObjectElements();
		this.pBoolean = new BooleanElements();
		this.pSystem = new SystemElements();
		this.pData = new DataElements();
		this.pRole = new RoleElements();
		this.pParameter = new ParameterElements();
		this.pBusinessProcess = new BusinessProcessElements();
		this.pProcessStartElements = new ProcessStartElementsElements();
		this.pChart = new ChartElements();
		this.pStartTimeAlternative = new StartTimeAlternativeElements();
		this.pTimeAlternative = new TimeAlternativeElements();
		this.pStartAlternative = new StartAlternativeElements();
		this.pAlternative = new AlternativeElements();
		this.pProcessElements = new ProcessElementsElements();
		this.pProcessChartElements = new ProcessChartElementsElements();
		this.pLoop = new LoopElements();
		this.pIFQuery = new IFQueryElements();
		this.pQueryTypes = new QueryTypesElements();
		this.pQuery = new QueryElements();
		this.pBooleanQuery = new BooleanQueryElements();
		this.pDataQuery = new DataQueryElements();
		this.pBraceQuery = new BraceQueryElements();
		this.pPlayerQuery = new PlayerQueryElements();
		this.pCommunication = new CommunicationElements();
		this.pActivity = new ActivityElements();
		this.pSystemwork = new SystemworkElements();
		this.tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "ID");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.MyDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Domainmodel:
	//	element+=(Interview | TypeDefinition)?;
	public DomainmodelElements getDomainmodelAccess() {
		return pDomainmodel;
	}
	
	public ParserRule getDomainmodelRule() {
		return getDomainmodelAccess().getRule();
	}

	//TypeDefinition:
	//	Systemtype | ChannelDefintion | Datatype | Roletype;
	public TypeDefinitionElements getTypeDefinitionAccess() {
		return pTypeDefinition;
	}
	
	public ParserRule getTypeDefinitionRule() {
		return getTypeDefinitionAccess().getRule();
	}

	//Datatype:
	//	"package" package="DataPackage" ";" "Datatype" name=ID "{" "}";
	public DatatypeElements getDatatypeAccess() {
		return pDatatype;
	}
	
	public ParserRule getDatatypeRule() {
		return getDatatypeAccess().getRule();
	}

	//Systemtype:
	//	"package" package="SystemPackage" ";" "Systemtype" name=ID "{" functions+=Function* "}";
	public SystemtypeElements getSystemtypeAccess() {
		return pSystemtype;
	}
	
	public ParserRule getSystemtypeRule() {
		return getSystemtypeAccess().getRule();
	}

	//ChannelDefintion:
	//	"package" package="ChannelPackage" ";" type=("asynchronous" | "synchronous")? "Channel" name=ID "{" "}";
	public ChannelDefintionElements getChannelDefintionAccess() {
		return pChannelDefintion;
	}
	
	public ParserRule getChannelDefintionRule() {
		return getChannelDefintionAccess().getRule();
	}

	//Roletype:
	//	"package" package="RolePackage" ";" "Roletype" name=ID "{" state+=State* tasks+=Task* messages+=Message* "}";
	public RoletypeElements getRoletypeAccess() {
		return pRoletype;
	}
	
	public ParserRule getRoletypeRule() {
		return getRoletypeAccess().getRule();
	}

	//State:
	//	"state" name=ID ";";
	public StateElements getStateAccess() {
		return pState;
	}
	
	public ParserRule getStateRule() {
		return getStateAccess().getRule();
	}

	//Task:
	//	"task" name=ID "(" (parameter+=[Parameter] ("," parameter+=[Parameter])*)? ")" ";";
	public TaskElements getTaskAccess() {
		return pTask;
	}
	
	public ParserRule getTaskRule() {
		return getTaskAccess().getRule();
	}

	//Message:
	//	"message" name=ID "(" (parameter+=[Parameter] ("," parameter+=[Parameter])*)? ")" ";";
	public MessageElements getMessageAccess() {
		return pMessage;
	}
	
	public ParserRule getMessageRule() {
		return getMessageAccess().getRule();
	}

	//Function:
	//	"function" name=ID "(" (parameter+=[Parameter] ("," parameter+=[Parameter])*)? ")" (returnValue?="returns"
	//	returnArgument=[TypeDefinition]? returnBool="boolean"?)? ";";
	public FunctionElements getFunctionAccess() {
		return pFunction;
	}
	
	public ParserRule getFunctionRule() {
		return getFunctionAccess().getRule();
	}

	//Interview:
	//	"package" package="InterviewPackage" ";" "Interview" name=STRING "{" "main" mainPlayer=Role objects+=Object*
	//	process+=BusinessProcess* "}";
	public InterviewElements getInterviewAccess() {
		return pInterview;
	}
	
	public ParserRule getInterviewRule() {
		return getInterviewAccess().getRule();
	}

	//Object:
	//	Data | Role | System | Boolean;
	public ObjectElements getObjectAccess() {
		return pObject;
	}
	
	public ParserRule getObjectRule() {
		return getObjectAccess().getRule();
	}

	//Boolean:
	//	"boolean" type=[TypeDefinition]? name=ID ";";
	public BooleanElements getBooleanAccess() {
		return pBoolean;
	}
	
	public ParserRule getBooleanRule() {
		return getBooleanAccess().getRule();
	}

	//System:
	//	"system" type=[TypeDefinition] name=ID ";";
	public SystemElements getSystemAccess() {
		return pSystem;
	}
	
	public ParserRule getSystemRule() {
		return getSystemAccess().getRule();
	}

	//Data:
	//	"data" type=[TypeDefinition] name=ID ";";
	public DataElements getDataAccess() {
		return pData;
	}
	
	public ParserRule getDataRule() {
		return getDataAccess().getRule();
	}

	//Role:
	//	RoleType=("insideRole" | "outsideRole") type=[TypeDefinition] name=ID ";";
	public RoleElements getRoleAccess() {
		return pRole;
	}
	
	public ParserRule getRoleRule() {
		return getRoleAccess().getRule();
	}

	//Parameter:
	//	TypeDefinition;
	public ParameterElements getParameterAccess() {
		return pParameter;
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}

	//BusinessProcess:
	//	"process" name=STRING "{" element=ProcessStartElements? "}";
	public BusinessProcessElements getBusinessProcessAccess() {
		return pBusinessProcess;
	}
	
	public ParserRule getBusinessProcessRule() {
		return getBusinessProcessAccess().getRule();
	}

	//ProcessStartElements:
	//	StartTimeAlternative | Chart | StartAlternative;
	public ProcessStartElementsElements getProcessStartElementsAccess() {
		return pProcessStartElements;
	}
	
	public ParserRule getProcessStartElementsRule() {
		return getProcessStartElementsAccess().getRule();
	}

	//Chart:
	//	{Chart} "start" "{" startElements+=ProcessChartElements* "}" "followed" "{" followedElements+=ProcessElements* "}";
	public ChartElements getChartAccess() {
		return pChart;
	}
	
	public ParserRule getChartRule() {
		return getChartAccess().getRule();
	}

	//StartTimeAlternative:
	//	{StarTimeAlternative} "mostly" "{" mostlyAlternative+=ProcessStartElements? "}" "sometimes" "{"
	//	sometimesAlternative+=ProcessStartElements? "}" ("sometimes" "{" sometimesAlternative+=ProcessStartElements? "}")*;
	public StartTimeAlternativeElements getStartTimeAlternativeAccess() {
		return pStartTimeAlternative;
	}
	
	public ParserRule getStartTimeAlternativeRule() {
		return getStartTimeAlternativeAccess().getRule();
	}

	//TimeAlternative:
	//	{TimeAlternative} "mostly" "{" mostlyAlternative+=ProcessElements* "}" "sometimes" "{"
	//	sometimeAlternative+=ProcessElements* "}" ("sometimes" "{" sometimeAlternative+=ProcessElements* "}")*;
	public TimeAlternativeElements getTimeAlternativeAccess() {
		return pTimeAlternative;
	}
	
	public ParserRule getTimeAlternativeRule() {
		return getTimeAlternativeAccess().getRule();
	}

	//StartAlternative:
	//	{StartAlternative} "alt" "{" alternative+=ProcessStartElements? "}" "or" "{" alternative+=ProcessStartElements? "}"
	//	("or" "{" alternative+=ProcessStartElements? "}")*;
	public StartAlternativeElements getStartAlternativeAccess() {
		return pStartAlternative;
	}
	
	public ParserRule getStartAlternativeRule() {
		return getStartAlternativeAccess().getRule();
	}

	//Alternative:
	//	{Alternative} "alt" "{" alternative+=ProcessElements* "}" "or" "{" alternative+=ProcessElements* "}" ("or" "{"
	//	alternative+=ProcessElements* "}")*;
	public AlternativeElements getAlternativeAccess() {
		return pAlternative;
	}
	
	public ParserRule getAlternativeRule() {
		return getAlternativeAccess().getRule();
	}

	//ProcessElements:
	//	Communication | Activity | Alternative | TimeAlternative | IFQuery | Systemwork | Loop;
	public ProcessElementsElements getProcessElementsAccess() {
		return pProcessElements;
	}
	
	public ParserRule getProcessElementsRule() {
		return getProcessElementsAccess().getRule();
	}

	//ProcessChartElements:
	//	Communication | Activity | Alternative | TimeAlternative | Systemwork;
	public ProcessChartElementsElements getProcessChartElementsAccess() {
		return pProcessChartElements;
	}
	
	public ParserRule getProcessChartElementsRule() {
		return getProcessChartElementsAccess().getRule();
	}

	//Loop:
	//	"loop" "[" (uncounter="*" | counter=INT) "]" "{" elements+=ProcessElements* "}";
	public LoopElements getLoopAccess() {
		return pLoop;
	}
	
	public ParserRule getLoopRule() {
		return getLoopAccess().getRule();
	}

	//IFQuery:
	//	"if" "(" queries+=QueryTypes (("||" | "&&") queries+=QueryTypes)* ")" "{" elements+=ProcessElements* "}" ("else" "{"
	//	elements+=ProcessElements* "}")?;
	public IFQueryElements getIFQueryAccess() {
		return pIFQuery;
	}
	
	public ParserRule getIFQueryRule() {
		return getIFQueryAccess().getRule();
	}

	//QueryTypes:
	//	Query | BraceQuery;
	public QueryTypesElements getQueryTypesAccess() {
		return pQueryTypes;
	}
	
	public ParserRule getQueryTypesRule() {
		return getQueryTypesAccess().getRule();
	}

	//Query:
	//	DataQuery | PlayerQuery | BooleanQuery;
	public QueryElements getQueryAccess() {
		return pQuery;
	}
	
	public ParserRule getQueryRule() {
		return getQueryAccess().getRule();
	}

	//BooleanQuery:
	//	"!"? booleanValue=[Boolean] ("is" boolean=("true" | "false"))?;
	public BooleanQueryElements getBooleanQueryAccess() {
		return pBooleanQuery;
	}
	
	public ParserRule getBooleanQueryRule() {
		return getBooleanQueryAccess().getRule();
	}

	//DataQuery:
	//	exclamation?="!"? objectOne=[Object] condition=("!=" | "==") objectTwo=[Object];
	public DataQueryElements getDataQueryAccess() {
		return pDataQuery;
	}
	
	public ParserRule getDataQueryRule() {
		return getDataQueryAccess().getRule();
	}

	//BraceQuery:
	//	"!"? "(" queries+=QueryTypes (("||" | "&&") queries+=QueryTypes)* ")";
	public BraceQueryElements getBraceQueryAccess() {
		return pBraceQuery;
	}
	
	public ParserRule getBraceQueryRule() {
		return getBraceQueryAccess().getRule();
	}

	//PlayerQuery:
	//	"!"? player=[Role] "." status=[State] ("is" boolean=("true" | "false"))?;
	public PlayerQueryElements getPlayerQueryAccess() {
		return pPlayerQuery;
	}
	
	public ParserRule getPlayerQueryRule() {
		return getPlayerQueryAccess().getRule();
	}

	//Communication:
	//	importance=("im" | "unim")? sender=[Object] execution=("can" | "must") "send" "to" receiver=[Role] "."
	//	message=[Message] "(" (parameter+=[Object] ("," parameter+=[Object])*)? ")" ("via" channel=[ChannelDefintion])? ";";
	public CommunicationElements getCommunicationAccess() {
		return pCommunication;
	}
	
	public ParserRule getCommunicationRule() {
		return getCommunicationAccess().getRule();
	}

	//Activity:
	//	importance=("im" | "unim")? player=[Role] execution=("can" | "must") "do" task=[Task] "(" (parameter+=[Object] (","
	//	parameter+=[Object])*)? ")" ";";
	public ActivityElements getActivityAccess() {
		return pActivity;
	}
	
	public ParserRule getActivityRule() {
		return getActivityAccess().getRule();
	}

	//Systemwork:
	//	(returnObject=[Object] "=")? importance=("im" | "unim")? player=[Role] execution=("can" | "must") "systemwork"
	//	system=[System] "." function=[Function] "(" (parameter+=[Object] ("," parameter+=[Object])*)? ")" ";";
	public SystemworkElements getSystemworkAccess() {
		return pSystemwork;
	}
	
	public ParserRule getSystemworkRule() {
		return getSystemworkAccess().getRule();
	}

	//terminal ID:
	//	("a".."z" | "A".."Z" | "ä" | "ö" | "ü" | "ß" | "_")*;
	public TerminalRule getIDRule() {
		return tID;
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" . / * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\""))* "\"" | "\'" ("\\" .
	//	/ * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
